{"version":3,"sources":["features/layout/Layout.module.scss","features/question/Question.module.scss","features/background/backgroundSlice.ts","features/background/Background.tsx","features/layout/Layout.tsx","app/hooks.ts","features/question/questionSlice.tsx","features/question/Intro.tsx","features/question/Outro.tsx","features/question/Question.tsx","features/question/QuestionsIterator.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","min","max","initialState","current","Math","ceil","floor","random","count","backgroundSlice","createSlice","name","reducers","cycle","state","n","document","getElementsByTagName","className","actions","Background","dispatch","useDispatch","useEffect","Layout","props","style","root","Grid","container","height","width","spacing","direction","justifyContent","alignItems","item","children","questionAnswer","useAppSelector","useSelector","Intro","question","text2","href","target","xs","button","role","onClick","onStart","Outro","text3","score","total","q","text","answer","questions","gay","notGay","currentIndex","length","completed","started","sortedQuestions","questionsSlice","action","payload","start","sorted","arr","i","j","shuffleArray","getQuestionsState","Question","progress","index","onAnswer","QuestionsIterator","console","log","cycleBackground","App","store","configureStore","reducer","background","questionSlice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f7c9d2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__5M4GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__1l59x\",\"text2\":\"Question_text2__1ZWJ1\",\"text3\":\"Question_text3__2jFME\",\"text\":\"Question_text__3SeF1\",\"progress\":\"Question_progress__10-4e\",\"button\":\"Question_button__3uAMG\"};","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\n function getRandomInt(min: number, max: number) : number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport interface BackgroundState {\n  current: number\n  count: number\n}\n\nconst initialState: BackgroundState = {\n  current: getRandomInt(1, 10),\n  count: 10,\n};\n\nfunction changeBackground(n: number) {\n  let elem = document.getElementsByTagName(\"html\")[0];\n  elem.className = `bg${n}`;\n}\n\nexport const backgroundSlice = createSlice({\n  name: 'background',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    cycle: (state) => {\n      state.current = state.current === state.count ? 1 : (state.current + 1);\n      changeBackground(state.current);\n    },\n  },\n});\n\nexport const { cycle } = backgroundSlice.actions;\n\nexport default backgroundSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { cycle } from './backgroundSlice';\n\n\nexport function Background() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(cycle());\n  }, [])\n\n  return null;\n}\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport style from \"./Layout.module.scss\";\n\nexport interface LayoutProps {\n  children: any\n}\n\nexport function Layout(props: LayoutProps) {\n  return (\n    <div className={style.root}>\n      <Grid container\n        style={{height:\"95vh\", width: \"100%\"}}\n        spacing={0}\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {/* <Grid item style={{border: \"2px solid red\"}}> */}\n        <Grid item>\n          {props.children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RootState } from '../../app/store';\n\nexport enum questionAnswer {\n  gay,\n  notGay\n}\n\nexport interface question {\n  text: string\n  answer: questionAnswer\n}\n\nfunction q(text: string, answer: questionAnswer): question {\n  return {text, answer};\n}\n\nfunction shuffleArray(arr : any[]) : any[] {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\nconst questions : question[] = [\n  q(\"La discovery page di Tea\", questionAnswer.gay),\n  q(\"Essere donna\", questionAnswer.gay),\n  q(\"Andy Warhol\", questionAnswer.gay),\n  q(\"L'Armonica di Tea\", questionAnswer.gay),\n  q(\"Musica\", questionAnswer.gay),\n  q(\"Ballare\", questionAnswer.gay),\n  q(\"Feste\", questionAnswer.gay),\n  q(\"Bere alcool\", questionAnswer.notGay),\n  q(\"Assumere droghe\", questionAnswer.gay),\n  q(\"L'aperitivo\", questionAnswer.gay),\n  q(\"Prendere un espresso al bar in piedi\", questionAnswer.notGay),\n  q(\"Il mondo\", questionAnswer.gay),\n  q(\"L'America\", questionAnswer.notGay),\n  q(\"La Cina\", questionAnswer.notGay),\n  q(\"La Germania\", questionAnswer.notGay),\n  q(\"L'Italia\", questionAnswer.gay),\n  q(\"La Francia\", questionAnswer.gay),\n  q(\"Il Giappone\", questionAnswer.gay),\n  q(\"Il Calcio\", questionAnswer.gay),\n  q(\"Giocare a calcio\", questionAnswer.gay),\n  q(\"Guardare il calcio\", questionAnswer.notGay),\n  q(\"Gli spaghetti\", questionAnswer.gay),\n  q(\"La lasagna\", questionAnswer.notGay),\n  q(\"Aspettare un bus\", questionAnswer.notGay),\n  q(\"Stare su un bus\", questionAnswer.gay),\n  q(\"Guidare un bus\", questionAnswer.notGay),\n  q(\"I cani\", questionAnswer.notGay),\n  q(\"Avere un cane\", questionAnswer.gay),\n  q(\"Le calze\", questionAnswer.gay),\n  q(\"Le scarpe\", questionAnswer.gay),\n  q(\"Le Hogan\", questionAnswer.notGay),\n  q(\"La moda\", questionAnswer.gay),\n  q(\"Il brand di Chiara Ferragni\", questionAnswer.notGay),\n  q(\"Il cielo\", questionAnswer.gay),\n  q(\"Il sole\", questionAnswer.notGay),\n  q(\"Le stelle\", questionAnswer.gay),\n  q(\"La luna\", questionAnswer.gay),\n  q(\"La televisione\", questionAnswer.notGay),\n  q(\"I film\", questionAnswer.gay),\n  q(\"Il gelato\", questionAnswer.gay),\n  q(\"Viaggiare\", questionAnswer.gay),\n  q(\"Dormire\", questionAnswer.gay),\n  q(\"Sposarsi\", questionAnswer.gay),\n  q(\"Una coppia etero che si sposa\", questionAnswer.gay),\n  q(\"Parlare\", questionAnswer.notGay),\n  q(\"Urlare\", questionAnswer.gay),\n  q(\"Camminare\", questionAnswer.notGay),\n  q(\"Correre\", questionAnswer.gay),\n  q(\"La pioggia\", questionAnswer.gay),\n  q(\"Il vento\", questionAnswer.gay),\n  q(\"La scrittura\", questionAnswer.notGay),\n  q(\"L'arte\", questionAnswer.gay),\n  q(\"La chiesa\", questionAnswer.gay),\n  q(\"Le autostrade\", questionAnswer.notGay),\n  q(\"Il mare\", questionAnswer.notGay),\n  q(\"Tutti gli animali dentro il mare\", questionAnswer.gay),\n  q(\"Tutti i pesci\", questionAnswer.gay),\n  q(\"Nuotare nel mare\", questionAnswer.gay),\n  q(\"Mettere i piedi nel mare\", questionAnswer.gay),\n  q(\"Le piscine\", questionAnswer.notGay),\n  q(\"Il tavolo\", questionAnswer.notGay),\n  q(\"Le sedie\", questionAnswer.gay),\n  q(\"La cena\", questionAnswer.notGay),\n  q(\"Il pranzo\", questionAnswer.notGay),\n  q(\"La colazione\", questionAnswer.gay),\n  q(\"Essere Lady Gaga\", questionAnswer.gay),\n  q(\"Un concetto\", questionAnswer.gay),\n  q(\"La confusione\", questionAnswer.gay),\n  q(\"Fare l'assistente di volo\", questionAnswer.gay),\n  q(\"Lavorare sui treni\", questionAnswer.notGay),\n]\n\nexport interface QuestionsState {\n  currentIndex: number\n  current: question,\n  total: number,\n  score: number,\n  completed: boolean,\n  started: boolean,\n  sortedQuestions: question[],\n}\n\nconst initialState: QuestionsState = {\n  currentIndex: 0,\n  current: questions[0],\n  total: questions.length,\n  score: 0,\n  completed: false,\n  started: false,\n  sortedQuestions: [...questions],\n};\n\nexport const questionsSlice = createSlice({\n  name: 'questions',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    cycle: (state, action:PayloadAction<{answer: questionAnswer}>) => {\n      if (state.completed) {\n        return\n      }\n      state.completed = state.currentIndex+1 === state.total;\n      if (action.payload.answer === state.current.answer) {\n        state.score += 1;\n      }\n      state.currentIndex = state.currentIndex === state.total - 1 ? state.currentIndex : (state.currentIndex + 1);\n      state.current = state.sortedQuestions[state.currentIndex];\n    },\n    start: (state) => {\n      const sorted = shuffleArray([...questions]);\n      state.sortedQuestions = sorted\n      state.current = sorted[0];\n      state.started = true\n    },\n  },\n});\n\nexport const { cycle, start } = questionsSlice.actions;\n\nexport const getQuestionsState = (state: RootState) => state.questions;\n\nexport default questionsSlice.reducer;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport style from \"./Question.module.scss\";\nimport { question, questionAnswer } from './questionSlice';\n\nexport interface IntroProps {\n  onStart: () => void,\n}\n\nexport function Intro(props: IntroProps) {\n  return (\n    <>\n      <div className={style.question}>\n        <span className={style.text2}>\n            Pioveva e stavo sul treno per Milano ascoltando il <a href=\"https://podcasts.apple.com/it/podcast/troie-radicali/id1547562090\" target=\"_blank\">podcast</a> di <a href=\"https://www.instagram.com/teahacic/\" target=\"_blank\">@teahacic</a>.<br/>\n            Inizia a elencare un mucchio di cose random distinguendole in gay e non.<br/>\n            Ho pensato che avrebbe avuto senso trasformarlo in un quiz.\n        </span>\n      </div>\n      <Grid container xs={12}>\n        <Grid item xs={3}>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={style.button} role=\"start\" onClick={() => props.onStart()}>Start</div>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport style from \"./Question.module.scss\";\nimport { question, questionAnswer } from './questionSlice';\n\nexport interface OutroProps {\n  score: number,\n  total: number,\n}\n\nexport function Outro(props: OutroProps) {\n  return (\n    <>\n      <div className={style.question}>\n        <span className={style.text2}>\n            Il tuo punteggio è<br/>\n            <span className={style.text3}>{props.score} / {props.total}</span>\n            Ti ricordo che questo sito non è di <a href=\"https://www.instagram.com/teahacic/\" target=\"_blank\">@teahacic</a>.<br/>\n            Si tratta di un contenuto no-profit, fun-made, senza nessun messaggio<br/>\n            politico, sociale, religioso o filosofico nascosto.<br/>\n            Per favore non rompete i coglioni.\n        </span>\n      </div>\n    </>\n  );\n}\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport style from \"./Question.module.scss\";\nimport { question, questionAnswer } from './questionSlice';\n\nexport interface QuestionProps {\n  q: question,\n  index: number,\n  total: number,\n  onAnswer: (answer: questionAnswer) => void,\n}\n\nexport function Question(props: QuestionProps) {\n  return (\n    <>\n      <div className={style.question}>\n\n        <span className={style.text}>\n          {props.q.text}\n        </span> \n\n        <span className={style.progress}>\n          {\n            props.total === props.index + 1\n            ?\n            <span>Siamo alla fine</span>\n            :\n            <span>Ancora {props.total-props.index} cose</span>\n          }\n          \n        </span>\n      </div>\n      <Grid container xs={12}>\n        <Grid item xs={6}>\n          <div className={style.button} role=\"gay\" onClick={() => props.onAnswer(questionAnswer.gay)}>Gay</div>\n        </Grid>\n\n        <Grid item xs={6}>\n          <div className={style.button} role=\"not-gay\" onClick={() => props.onAnswer(questionAnswer.notGay)}>Not Gay</div>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { cycle as cycleBackground } from '../background/backgroundSlice';\nimport { Intro } from './Intro';\nimport { Outro } from './Outro';\nimport { Question } from './Question';\nimport { cycle, getQuestionsState, start } from './questionSlice';\n\nexport interface QuestionsIteratorProps {\n}\n\nexport function QuestionsIterator(props: QuestionsIteratorProps) {\n  const dispatch = useAppDispatch();\n  const { currentIndex, current, total, score, completed, started } = useAppSelector(getQuestionsState);\n\n  console.log(`${score} (completed=${completed})`)\n\n  if (!started) {\n    return <Intro \n      onStart={() => dispatch(start())}\n    />\n  }\n\n  if (started && completed) {\n    return <Outro\n      score={score}\n      total={total}\n    />\n  }\n  \n  return (\n    <>\n      <Question\n        q={current}\n        index={currentIndex}\n        total={total}\n        onAnswer={(answer) => {\n          dispatch(cycleBackground());\n          dispatch(cycle({answer}));\n        }}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Background } from './features/background/Background';\nimport { Layout } from './features/layout/Layout';\nimport { QuestionsIterator } from './features/question/QuestionsIterator';\n\nfunction App() {\n  return (\n    <>\n      <Background />\n      <Layout>\n        <QuestionsIterator />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport backgroundSlice from '../features/background/backgroundSlice';\nimport questionSlice from '../features/question/questionSlice';\n\nexport const store = configureStore({\n  reducer: {\n    background: backgroundSlice,\n    questions: questionSlice,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}